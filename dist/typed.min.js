/*! typed v2.0.0 | https://github.com/ryanmorr/typed */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.typed=e()}}(function(){return function e(n,r,t){function o(i,f){if(!r[i]){if(!n[i]){var a="function"==typeof require&&require;if(!f&&a)return a(i,!0);if(u)return u(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=r[i]={exports:{}};n[i][0].call(l.exports,function(e){var r=n[i][1][e];return o(r?r:e)},l,l.exports,e,n,r,t)}return r[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(e,n,r){"use strict";function t(e){var n={};for(var r in e)l.call(e,r)&&o(n,r,e[r]);return n}function o(e,n,r){var t=void 0,o=u(n,r);Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){o(e)&&(t=e)}})}function u(e,n){var r=void 0,t=f(n);return t?function(n){return r=i(n),r!==t&&c(e,t,r),!0}:function(r){return r instanceof n||c(e,a(n),i(r)),!0}}function i(e){return d.call(e).slice(8,-1)}function f(e){for(var n in s)if(l.call(s,n)&&e===s[n])return n;return null}function a(e){return e.name||e.toString().match(p)[1]||"anonymous"}function c(e,n,r){throw new TypeError('Invalid value assignment on "'+e+'", expected: '+n+", actual: "+r)}Object.defineProperty(r,"__esModule",{value:!0});var l={}.hasOwnProperty,d={}.toString,p=/function\s+([^(]+)/,s={Array:Array,Boolean:Boolean,Date:Date,Function:Function,Number:Number,Object:Object,RegExp:RegExp,String:String};r["default"]=t,n.exports=r["default"]},{}]},{},[1])(1)});
//# sourceMappingURL=typed.min.js.map
