/*! typed v1.0.0 | (c) 2015 Ryan Morr | https://github.com/ryanmorr/typed */
!function(n){"use strict";function e(n){var e,r={};for(e in n)f.call(n,e)&&t(r,e,n[e]);return r}function t(n,e,t){var o,u=r(e,t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return o},set:function(n){u(n)&&(o=n)}})}function r(n,e){var t,r=u(e);return r?function(e){return t=o(e),t!==r&&c(n,r,t),!0}:function(t){return t instanceof e||c(n,i(e),o(t)),!0}}function o(n){return a.call(n).slice(8,-1)}function u(e){for(var t=0,r=d.length;r>t;t++)if(e===n[d[t]])return d[t];return null}function i(n){return n.name||n.toString().match(l)[1]||"anonymous"}function c(n,e,t){throw new TypeError('Invalid value assignment on "'+n+'", expected: '+e+", actual: "+t)}var f={}.hasOwnProperty,a={}.toString,l=/function\s+([^(]+)/,d=["Array","Boolean","Date","Function","Number","Object","RegExp","String"];"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define(function(){return e}):n.typed=e}(this);